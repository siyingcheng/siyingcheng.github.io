import{_ as r,D as s,c as i,j as o,a as t,I as a,a4 as c,o as n}from"./chunks/framework.Ho0cDKEI.js";const v=JSON.parse('{"title":"Cucumber Queries","titleTemplate":"Javascript","description":"Notes for Cucumber.js queries.","frontmatter":{"title":"Cucumber Queries","titleTemplate":"Javascript","description":"Notes for Cucumber.js queries.","head":[["meta",{"name":"description","content":"Notes for Cucumber.js queries."}]],"tags":["Cucumber"],"categories":["Queries"]},"headers":[],"relativePath":"notes/cucumber-js/queries.md","filePath":"notes/cucumber-js/queries.md","lastUpdated":1723114068000}'),d={name:"notes/cucumber-js/queries.md"},h={id:"queries",tabindex:"-1"},u=o("a",{class:"header-anchor",href:"#queries","aria-label":'Permalink to "Queries <Badge type="tip" text="Cucumber" /><Badge type="warning" text="Notes" />"'},"​",-1),l=c('<h2 id="what-are-the-three-practices-of-bdd-and-in-what-order-do-you-apply-them-to-a-story" tabindex="-1">What are the three practices of BDD, and in what order do you apply them to a story? <a class="header-anchor" href="#what-are-the-three-practices-of-bdd-and-in-what-order-do-you-apply-them-to-a-story" aria-label="Permalink to &quot;What are the three practices of BDD, and in what order do you apply them to a story?&quot;">​</a></h2><details class="details custom-block"><summary>Answer</summary><p><code>Discover - Formulation - Automation</code></p><p>We start by collaboratively <strong><em>discovering</em></strong> the scope of the behaviour required by the story. Once we have agreed on that behaviour, we <strong><em>formulate</em></strong> the specification in business-readable language. Finally, we <strong><em>automate</em></strong> the formulated specification to verify that the system actually behaves as expected.</p></details><h2 id="how-are-cucumber-and-bdd-related" tabindex="-1">How are Cucumber and BDD related? <a class="header-anchor" href="#how-are-cucumber-and-bdd-related" aria-label="Permalink to &quot;How are Cucumber and BDD related?&quot;">​</a></h2><details class="details custom-block"><summary>Answer</summary><p><code>BDD is a collaborative way of working for teams that can include using Cucumber</code></p><p>Cucumber is a tool that understands your documentation and turns it into automated tests.</p><p>BDD is a collaborative approach, made up of three practices. BDD practitioners may use Cucumber to automate their documentation.</p></details><h2 id="bdd-practitioners-prefer-comprehensive-documentation-over-collaboration" tabindex="-1">BDD practitioners prefer comprehensive documentation over collaboration? <a class="header-anchor" href="#bdd-practitioners-prefer-comprehensive-documentation-over-collaboration" aria-label="Permalink to &quot;BDD practitioners prefer comprehensive documentation over collaboration?&quot;">​</a></h2><details class="details custom-block"><summary>Answer</summary><p><code>False</code></p><p>BDD is a collaborative activity. Living documentation is a secondary, valuable, output of applying BDD practices.</p></details><h2 id="which-of-these-statements-correctly-describes-how-each-of-these-keywords-should-be-used" tabindex="-1">Which of these statements correctly describes how each of these keywords should be used? <a class="header-anchor" href="#which-of-these-statements-correctly-describes-how-each-of-these-keywords-should-be-used" aria-label="Permalink to &quot;Which of these statements correctly describes how each of these keywords should be used?&quot;">​</a></h2><p>The Gherkin keywords <code>Given</code>, <code>When</code> and <code>Then</code>, allow us to express three different components of a scenario.</p><details class="details custom-block"><summary>Answer</summary><p><strong>Given</strong> is the <em>context</em> for the scenario. We’re putting the system into a specific state, ready for the scenario to unfold.</p><p><strong>When</strong> is an <em>action</em>. Something that happens to the system that will cause something else to happen: an outcome.</p><p><strong>Then</strong> is the <em>outcome</em>. It’s the behaviour we expect from the system when this action happens in this context.</p></details>',9);function m(p,b,y,f,w,g){const e=s("Badge");return n(),i("div",null,[o("h1",h,[t("Queries "),a(e,{type:"tip",text:"Cucumber"}),a(e,{type:"warning",text:"Notes"}),t(),u]),l])}const D=r(d,[["render",m]]);export{v as __pageData,D as default};
