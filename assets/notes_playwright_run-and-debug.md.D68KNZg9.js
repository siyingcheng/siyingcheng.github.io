import{_ as t,D as n,c as l,l as a,a as e,I as i,a3 as h,o as p}from"./chunks/framework.jUsBLwfc.js";const f=JSON.parse('{"title":"Running and Debugging Tests","titleTemplate":"Playwright","description":"Notes for Playwright Running and Debugging Tests","frontmatter":{"title":"Running and Debugging Tests","titleTemplate":"Playwright","description":"Notes for Playwright Running and Debugging Tests","head":[["meta",{"name":"description","content":"Notes for Playwright Running and Debugging Tests"}]],"tags":["Playwright"],"categories":["Notes"]},"headers":[],"relativePath":"notes/playwright/run-and-debug.md","filePath":"notes/playwright/run-and-debug.md","lastUpdated":1715847419000}'),d={name:"notes/playwright/run-and-debug.md"},r={id:"running-and-debugging-tests",tabindex:"-1"},o=a("a",{class:"header-anchor",href:"#running-and-debugging-tests","aria-label":'Permalink to "Running and Debugging Tests <Badge type="tip" text="Playwright" /><Badge type="warning" text="Notes" />"'},"​",-1),k=h(`<h2 id="command-line" tabindex="-1">Command Line <a class="header-anchor" href="#command-line" aria-label="Permalink to &quot;Command Line&quot;">​</a></h2><p>You can run your tests with the <code>playwright test</code> command. This will run your tests on all browsers as configured in the <code>playwright.config</code> file. Tests run in headless mode by default meaning no browser window will be opened while running the tests and results will be seen in the terminal.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h2 id="run-tests-in-ui-mode" tabindex="-1">Run tests in UI mode <a class="header-anchor" href="#run-tests-in-ui-mode" aria-label="Permalink to &quot;Run tests in UI mode&quot;">​</a></h2><p>The <code>UI Mode</code> for a better developer experience where you can easily walk through each step of the test and visually see what was happening before, during and after each step. UI mode also comes with many other features such as the locator picker, watch mode and more.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ui</span></span></code></pre></div><h2 id="run-tests-in-headed-mode" tabindex="-1">Run tests in headed mode <a class="header-anchor" href="#run-tests-in-headed-mode" aria-label="Permalink to &quot;Run tests in headed mode&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Playwright default is headless mode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --headed</span></span></code></pre></div><h2 id="run-tests-on-different-browsers" tabindex="-1">Run tests on different browsers <a class="header-anchor" href="#run-tests-on-different-browsers" aria-label="Permalink to &quot;Run tests on different browsers&quot;">​</a></h2><p>To specify which browser you would like to run your tests on, use the <code>--project</code> flag followed by the name of the browser.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Multiple browsers can be specified</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firefox</span></span></code></pre></div><h2 id="run-specific-tests" tabindex="-1">Run specific tests <a class="header-anchor" href="#run-specific-tests" aria-label="Permalink to &quot;Run specific tests&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To run a single test file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> landing-page.spec.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To run a set of test files from different directories</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/todo-page/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/landing-page/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To run files that have \`landing\` or \`login\` in their name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> landing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># To run a test with a specific title, use the -g flag followed by the title of the test.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;add a todo item&quot;</span></span></code></pre></div><h2 id="debug-tests-in-ui-mode" tabindex="-1">Debug tests in UI mode <a class="header-anchor" href="#debug-tests-in-ui-mode" aria-label="Permalink to &quot;Debug tests in UI mode&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ui</span></span></code></pre></div><h2 id="debug-tests-with-the-playwright-inspector" tabindex="-1">Debug tests with the Playwright Inspector <a class="header-anchor" href="#debug-tests-with-the-playwright-inspector" aria-label="Permalink to &quot;Debug tests with the Playwright Inspector&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span></span></code></pre></div><p>To debug one test file:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.spec.ts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span></span></code></pre></div><p>To debug a specific test from the line number where the <code>test(..</code> is defined, add a colon followed by the line number at the end of the test file name, followed by the <code>--debug</code> flag.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.spec.ts:10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span></span></code></pre></div><h2 id="test-reports" tabindex="-1">Test reports <a class="header-anchor" href="#test-reports" aria-label="Permalink to &quot;Test reports&quot;">​</a></h2><p>The HTML Reporter shows you a full report of your tests allowing you to filter the report by browsers, passed tests, failed tests, skipped tests and flaky tests. By default, the HTML report is opened automatically if some of the tests failed, otherwise you can open it with the following command.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show-report</span></span></code></pre></div>`,24);function g(c,u,F,y,b,C){const s=n("Badge");return p(),l("div",null,[a("h1",r,[e("Running and Debugging Tests "),i(s,{type:"tip",text:"Playwright"}),i(s,{type:"warning",text:"Notes"}),e(),o]),k])}const w=t(d,[["render",g]]);export{f as __pageData,w as default};
