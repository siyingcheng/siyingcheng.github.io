import{_ as o,E as i,c as n,m as s,a as t,J as a,a4 as c,o as r}from"./chunks/framework.Cm3VkEvl.js";const S=JSON.parse('{"title":"Test Practices","titleTemplate":"Selenium","description":"Selenium Test Practices","frontmatter":{"title":"Test Practices","titleTemplate":"Selenium","description":"Selenium Test Practices","head":[["meta",{"name":"description","content":"Selenium Test Practices"}]],"tags":["Selenium"],"categories":["Notes"]},"headers":[],"relativePath":"notes/selenium/Test_Practices.md","filePath":"notes/selenium/Test_Practices.md","lastUpdated":1709297650000}'),d={name:"notes/selenium/Test_Practices.md"},l={id:"test-practices",tabindex:"-1"},p=s("a",{class:"header-anchor",href:"#test-practices","aria-label":'Permalink to "Test Practices <Badge type="tip" text="Selenium" /><Badge type="warning" text="Notes" />"'},"​",-1),m=c('<h2 id="design-strategies" tabindex="-1">Design Strategies <a class="header-anchor" href="#design-strategies" aria-label="Permalink to &quot;Design Strategies&quot;">​</a></h2><p>Here is the <a href="https://www.selenium.dev/documentation/test_practices/design_strategies/" target="_blank" rel="noreferrer"><em>Official Documentation</em></a></p><ul><li><p><a href="https://www.selenium.dev/documentation/test_practices/encouraged/domain_specific_language/" target="_blank" rel="noreferrer">DomainDrivenDesign</a>: Express your tests in the language of the end-user of the app.</p></li><li><p><a href="https://www.selenium.dev/documentation/test_practices/design_strategies/#:~:text=of%20the%20app.-,PageObjects,-%3A%20A%20simple%20abstraction" target="_blank" rel="noreferrer">PageObjects</a>: A simple abstraction of the UI of your web app.</p></li><li><p>LoadableComponent: Modeling PageObjects as components.</p></li><li><p>BotStyleTests: Using a command-based approach to automating tests, rather than the object-based approach that PageObjects encourage</p></li></ul><p>In short, make your page class extends <code>LoadableComponent</code>, by extending this base class, needs to implement the <code>load()</code> and the <code>isLoaded()</code> methods. The <code>load()</code> method should load the page, and the <code>isLoaded()</code> method should check if the page is loaded.</p>',4);function h(_,g,u,f,T,b){const e=i("Badge");return r(),n("div",null,[s("h1",l,[t("Test Practices "),a(e,{type:"tip",text:"Selenium"}),a(e,{type:"warning",text:"Notes"}),t(),p]),m])}const x=o(d,[["render",h]]);export{S as __pageData,x as default};
