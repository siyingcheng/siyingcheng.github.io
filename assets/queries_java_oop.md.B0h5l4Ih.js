import{_ as i,D as s,c as r,j as t,a,I as o,a4 as l,o as m}from"./chunks/framework.C7RUBq8A.js";const w=JSON.parse('{"title":"Java OOP","titleTemplate":"Queries","description":"Notes for Java OOP Queries","frontmatter":{"title":"Java OOP","titleTemplate":"Queries","description":"Notes for Java OOP Queries","head":[["meta",{"name":"description","content":"Notes for Java OOP Queries"}]],"tags":["Java"],"categories":["Queries"]},"headers":[],"relativePath":"queries/java/oop.md","filePath":"queries/java/oop.md","lastUpdated":1723267598000}'),c={name:"queries/java/oop.md"},p={id:"java-oop-queries",tabindex:"-1"},d=t("a",{class:"header-anchor",href:"#java-oop-queries","aria-label":'Permalink to "Java OOP Queries <Badge type="tip" text="Java" /><Badge type="warning" text="Queries" />"'},"​",-1),n=l('<h2 id="which-of-the-following-is-a-type-of-polymorphism-in-java" tabindex="-1">Which of the following is a type of polymorphism in Java? <a class="header-anchor" href="#which-of-the-following-is-a-type-of-polymorphism-in-java" aria-label="Permalink to &quot;Which of the following is a type of polymorphism in Java?&quot;">​</a></h2><ul><li>Compile time polymorphism</li><li>Execution time polymorphism</li><li>Multiple polymorphism</li><li>Multilevel polymorphism</li></ul><details class="details custom-block"><summary>Answer</summary><p><code>Compile time polymorphism</code>: There are two types of polymorphism in Java. Compile time polymorphism (overloading) and run time polymorphism (overriding).</p></details><h2 id="a-class-member-declared-protected-becomes-a-member-of-subclass-of-which-type" tabindex="-1">A class member declared protected becomes a member of subclass of which type? <a class="header-anchor" href="#a-class-member-declared-protected-becomes-a-member-of-subclass-of-which-type" aria-label="Permalink to &quot;A class member declared protected becomes a member of subclass of which type?&quot;">​</a></h2><ul><li>static member</li><li>private member</li><li>protected member</li><li>public member</li></ul><details class="details custom-block"><summary>Answer</summary><p><code>private member</code>: Explanation: A class member declared protected becomes a private member of subclass.</p></details>',6);function h(u,f,b,_,v,y){const e=s("Badge");return m(),r("div",null,[t("h1",p,[a("Java OOP Queries "),o(e,{type:"tip",text:"Java"}),o(e,{type:"warning",text:"Queries"}),a(),d]),n])}const O=i(c,[["render",h]]);export{w as __pageData,O as default};
